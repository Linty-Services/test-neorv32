name: Full CI/CD
on:
  push:
    branches:
      - main

jobs:
  build:
    name: SonarQube Analysis
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      LINTY_YOSYS_PLUGIN_VERSION: 0.8.0
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Install Tabby CAD Suite
        run: |
          cd /opt
          pip install gdown
          gdown https://drive.google.com/file/d/19HyQxyqcUfOAZZTkjliec0AHRSeM-Zwm/view?usp=sharing --fuzzy
          tar xfz tabby-linux-x64-20230111.tgz
          cd tabby
          mkdir ./share/yosys/plugins
          echo "$TABBY_CAD_LICENSE" >> license.txt
        env:
          TABBY_CAD_LICENSE: ${{secrets.TABBY_CAD_LICENSE}}

      - name: Download Yosys Plugin
        uses: dsaltares/fetch-gh-release-asset@1.1.0
        with:
          repo: "Linty-Services/linty-yosys-plugin"
          version: "tags/${{env.LINTY_YOSYS_PLUGIN_VERSION}}"
          file: "linty-yosys-plugin-${{env.LINTY_YOSYS_PLUGIN_VERSION}}.tar.gz"
          target: "linty-yosys-plugin-${{env.LINTY_YOSYS_PLUGIN_VERSION}}.tar.gz"
          token: ${{ secrets.PUBLIC_SHARE_GITHUB_TOKEN }}

      - name: Install Linty Yosys Plugin
        run: tar -xvzf linty-yosys-plugin-${{env.LINTY_YOSYS_PLUGIN_VERSION}}.tar.gz -C /opt/tabby/share/yosys/plugins

      - name: Apply neorv32 patch
        run: |
          patch -u ./neorv32/sim/run.py -i run.py.patch
          patch -u ./neorv32/rtl/core/neorv32_cpu.vhd -i neorv32_cpu.vhd.patch

      - name: Test coverage
        run: |
          sudo apt-get install gnat
          wget https://github.com/ghdl/ghdl/releases/download/nightly/ghdl-gha-ubuntu-22.04-gcc.tgz
          mkdir -p ghdl
          tar -xf ghdl-gha-ubuntu-22.04-gcc.tgz --directory ./ghdl
          git clone https://github.com/huettern/ghdl-coverage.git
          cd ghdl-coverage/projects/adder/
          ../../../ghdl/bin/ghdl -a -Wc,-fprofile-arcs -Wc,-ftest-coverage adder.vhd
          ../../../ghdl/bin/ghdl -a adder_tb.vhd
          ../../../ghdl/bin/ghdl -e -Wl,-lgcov adder_tb
          ../../../ghdl/bin/ghdl -r adder_tb

          

      - name: Run SonarQube Analysis
        run: |
          export TABBY_CAD_HOME=/opt/tabby
          export PATH="$TABBY_CAD_HOME/bin:$PATH"
          export YOSYSHQ_LICENSE=/opt/tabby/license.txt
          wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856.zip
          unzip -q sonar-scanner-cli-4.8.0.2856.zip
          ./sonar-scanner-4.8.0.2856/bin/sonar-scanner \
            -Dsonar.host.url=https://sonar.linty-services.com \
            -Dsonar.login=${{ secrets.SONARQUBE_SCANNER_FOR_PRIVATE_REPOSITORIES_TOKEN }} \
            -Dsonar.projectKey=TEST_NEORV32 \
            -Dsonar.projectName="Test NEORV32" \
            -Dsonar.sources=./neorv32/rtl \
            -Dsonar.vhdl.topLevelEntity=neorv32_ProcessorTop_UP5KDemo \
            -Dsonar.coverageReportPaths=./coverage.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: debug
          path: |
            bugfinder_workdir/
